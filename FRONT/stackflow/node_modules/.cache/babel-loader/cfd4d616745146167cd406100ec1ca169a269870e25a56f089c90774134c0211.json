{"ast":null,"code":"var _jsxFileName = \"/Users/seohyeonseog/Desktop/Seo-Hyunseok/Project/StackFlow-PJT/FRONT/stackflow/src/pages/rt/RtRegister.js\",\n  _s = $RefreshSig$();\nimport \"./Rt.css\";\nimport axios from \"axios\";\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RtRegister = () => {\n  _s();\n  const csrfToken = \"64ECB534085A86FBAD6D93E0EAC56B0B1CF1B863\"; // CSRF 토큰\n\n  const [test, setTest] = useState();\n  const fetchData = async (url, setData) => {\n    try {\n      const response = await axios.get(url, {\n        withCredentials: true,\n        maxRedirects: 0,\n        // 리다이렉션 방지\n        headers: {\n          'X-CSRF-TOKEN': csrfToken\n        }\n      });\n      setData(response.data); // 데이터를 상태에 저장\n    } catch (err) {\n      if (err.response && err.response.status === 302) {\n        console.error('리다이렉션 발생:', err.response.headers.location);\n      } else {\n        console.error('Error:', err);\n      }\n    }\n  };\n  useEffect(() => {\n    fetchData('', setTest);\n  }, []);\n  console.log(test);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"\",\n          children: \"\\uC870\\uD68C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"\",\n          children: \"\\uBAA9\\uB85D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"\",\n          children: \"\\uCDE8\\uC18C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"\",\n          children: \"\\uB9C8\\uAC10\\uCC98\\uB9AC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"ff\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(RtRegister, \"ffbRLK4hwFY9wDhZRJE1amRYLZY=\");\n_c = RtRegister;\nexport default RtRegister;\nvar _c;\n$RefreshReg$(_c, \"RtRegister\");","map":{"version":3,"names":["axios","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","RtRegister","_s","csrfToken","test","setTest","fetchData","url","setData","response","get","withCredentials","maxRedirects","headers","data","err","status","console","error","location","log","children","className","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/seohyeonseog/Desktop/Seo-Hyunseok/Project/StackFlow-PJT/FRONT/stackflow/src/pages/rt/RtRegister.js"],"sourcesContent":["import \"./Rt.css\";\nimport axios from \"axios\"\nimport { useState, useEffect } from 'react'\n\n\nconst RtRegister = () => {\n  const csrfToken = \"64ECB534085A86FBAD6D93E0EAC56B0B1CF1B863\"; // CSRF 토큰\n  \n  const [test, setTest] = useState()\n  const fetchData = async (url, setData) => {\n    try {\n      const response = await axios.get(url, {\n        withCredentials: true,\n        maxRedirects: 0, // 리다이렉션 방지\n        headers: {\n          'X-CSRF-TOKEN': csrfToken,\n        },\n      });\n      setData(response.data); // 데이터를 상태에 저장\n    } catch (err) {\n      if (err.response && err.response.status === 302) {\n        console.error('리다이렉션 발생:', err.response.headers.location);\n      } else {\n        console.error('Error:', err);\n      }\n    }\n  };\n\n  useEffect(() => {\n    fetchData('', setTest);\n  }, []);\n\n \n  console.log(test)\n \n \n  return (\n    <>\n      <div className=\"\">\n        <div className=\"buttons\">\n          <button id=\"\">조회</button>\n          <button id=\"\" >목록</button>\n          <button id=\"\" >취소</button>\n          <button id=\"\" >마감처리</button>\n        </div>\n      </div>\n      <div>\n        ff\n      </div>\n    </>\n  )\n}\n\nexport default RtRegister"],"mappings":";;AAAA,OAAO,UAAU;AACjB,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAG3C,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAMC,SAAS,GAAG,0CAA0C,CAAC,CAAC;;EAE9D,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,CAAC;EAClC,MAAMW,SAAS,GAAG,MAAAA,CAAOC,GAAG,EAAEC,OAAO,KAAK;IACxC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAACH,GAAG,EAAE;QACpCI,eAAe,EAAE,IAAI;QACrBC,YAAY,EAAE,CAAC;QAAE;QACjBC,OAAO,EAAE;UACP,cAAc,EAAEV;QAClB;MACF,CAAC,CAAC;MACFK,OAAO,CAACC,QAAQ,CAACK,IAAI,CAAC,CAAC,CAAC;IAC1B,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZ,IAAIA,GAAG,CAACN,QAAQ,IAAIM,GAAG,CAACN,QAAQ,CAACO,MAAM,KAAK,GAAG,EAAE;QAC/CC,OAAO,CAACC,KAAK,CAAC,WAAW,EAAEH,GAAG,CAACN,QAAQ,CAACI,OAAO,CAACM,QAAQ,CAAC;MAC3D,CAAC,MAAM;QACLF,OAAO,CAACC,KAAK,CAAC,QAAQ,EAAEH,GAAG,CAAC;MAC9B;IACF;EACF,CAAC;EAEDnB,SAAS,CAAC,MAAM;IACdU,SAAS,CAAC,EAAE,EAAED,OAAO,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC;EAGNY,OAAO,CAACG,GAAG,CAAChB,IAAI,CAAC;EAGjB,oBACEN,OAAA,CAAAE,SAAA;IAAAqB,QAAA,gBACEvB,OAAA;MAAKwB,SAAS,EAAC,EAAE;MAAAD,QAAA,eACfvB,OAAA;QAAKwB,SAAS,EAAC,SAAS;QAAAD,QAAA,gBACtBvB,OAAA;UAAQyB,EAAE,EAAC,EAAE;UAAAF,QAAA,EAAC;QAAE;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACzB7B,OAAA;UAAQyB,EAAE,EAAC,EAAE;UAAAF,QAAA,EAAE;QAAE;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC1B7B,OAAA;UAAQyB,EAAE,EAAC,EAAE;UAAAF,QAAA,EAAE;QAAE;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC1B7B,OAAA;UAAQyB,EAAE,EAAC,EAAE;UAAAF,QAAA,EAAE;QAAI;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACN7B,OAAA;MAAAuB,QAAA,EAAK;IAEL;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA,eACN,CAAC;AAEP,CAAC;AAAAzB,EAAA,CA9CKD,UAAU;AAAA2B,EAAA,GAAV3B,UAAU;AAgDhB,eAAeA,UAAU;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}