{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst initialState = {\n  userInput: {\n    categoryGroup: \"\",\n    categoryCode: \"\",\n    colorCode: \"\",\n    size: \"\",\n    input: \"\"\n  },\n  selectOptions: [],\n  loading: false,\n  error: null\n};\nconst filterSlice = createSlice({\n  name: \"filter\",\n  initialState,\n  reducers: {\n    setUserInput: (state, action) => {\n      state.userInput = {\n        ...state.userInput,\n        ...action.payload\n      };\n    },\n    setSelectOptions: (state, action) => {\n      state.selectOptions = action.payload;\n      state.error = null;\n    },\n    setLoading: (state, action) => {\n      state.loading = action.payload;\n    },\n    setError: (state, action) => {\n      state.error = action.payload;\n    }\n  }\n});\nexport const {\n  setUserInput,\n  setSelectOptions,\n  setLoading,\n  setError\n} = filterSlice.actions;\nexport const fetchSelectOptions = (csrfToken, BASE_URL) => async dispatch => {\n  dispatch(setLoading(true)); // 로딩 시작\n  try {\n    const response = await axios.get(`${BASE_URL}/api/rt/all`, {\n      withCredentials: true,\n      headers: {\n        \"X-CSRF-TOKEN\": csrfToken\n      }\n    });\n    dispatch(setSelectOptions(response.data));\n  } catch (err) {\n    console.error(\"Error fetching select options:\", err);\n    dispatch(setError(err.message));\n  } finally {\n    dispatch(setLoading(false)); // 로딩 종료\n  }\n};\nexport default filterSlice.reducer;","map":{"version":3,"names":["createSlice","axios","initialState","userInput","categoryGroup","categoryCode","colorCode","size","input","selectOptions","loading","error","filterSlice","name","reducers","setUserInput","state","action","payload","setSelectOptions","setLoading","setError","actions","fetchSelectOptions","csrfToken","BASE_URL","dispatch","response","get","withCredentials","headers","data","err","console","message","reducer"],"sources":["/Users/seohyeonseog/Desktop/Seo-Hyunseok/Project/StackFlow-PJT/FRONT/stackflow/src/store/filterSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nconst initialState = {\n  userInput: {\n    categoryGroup: \"\",\n    categoryCode: \"\",\n    colorCode: \"\",\n    size: \"\",\n    input: \"\",\n  },\n  selectOptions: [],\n  loading: false,\n  error: null,\n};\n\nconst filterSlice = createSlice({\n  name: \"filter\",\n  initialState,\n  reducers: {\n    setUserInput: (state, action) => {\n      state.userInput = { ...state.userInput, ...action.payload };\n    },\n    setSelectOptions: (state, action) => {\n      state.selectOptions = action.payload;\n      state.error = null;\n    },\n    setLoading: (state, action) => {\n      state.loading = action.payload;\n    },\n    setError: (state, action) => {\n      state.error = action.payload;\n    },\n  },\n});\n\nexport const { setUserInput, setSelectOptions, setLoading, setError } =\n  filterSlice.actions;\n\nexport const fetchSelectOptions = (csrfToken, BASE_URL) => async (dispatch) => {\n  dispatch(setLoading(true)); // 로딩 시작\n  try {\n    const response = await axios.get(`${BASE_URL}/api/rt/all`, {\n      withCredentials: true,\n      headers: {\n        \"X-CSRF-TOKEN\": csrfToken,\n      },\n    });\n    dispatch(setSelectOptions(response.data));\n  } catch (err) {\n    console.error(\"Error fetching select options:\", err);\n    dispatch(setError(err.message));\n  } finally {\n    dispatch(setLoading(false)); // 로딩 종료\n  }\n};\n\nexport default filterSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG;EACnBC,SAAS,EAAE;IACTC,aAAa,EAAE,EAAE;IACjBC,YAAY,EAAE,EAAE;IAChBC,SAAS,EAAE,EAAE;IACbC,IAAI,EAAE,EAAE;IACRC,KAAK,EAAE;EACT,CAAC;EACDC,aAAa,EAAE,EAAE;EACjBC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,WAAW,GAAGZ,WAAW,CAAC;EAC9Ba,IAAI,EAAE,QAAQ;EACdX,YAAY;EACZY,QAAQ,EAAE;IACRC,YAAY,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC/BD,KAAK,CAACb,SAAS,GAAG;QAAE,GAAGa,KAAK,CAACb,SAAS;QAAE,GAAGc,MAAM,CAACC;MAAQ,CAAC;IAC7D,CAAC;IACDC,gBAAgB,EAAEA,CAACH,KAAK,EAAEC,MAAM,KAAK;MACnCD,KAAK,CAACP,aAAa,GAAGQ,MAAM,CAACC,OAAO;MACpCF,KAAK,CAACL,KAAK,GAAG,IAAI;IACpB,CAAC;IACDS,UAAU,EAAEA,CAACJ,KAAK,EAAEC,MAAM,KAAK;MAC7BD,KAAK,CAACN,OAAO,GAAGO,MAAM,CAACC,OAAO;IAChC,CAAC;IACDG,QAAQ,EAAEA,CAACL,KAAK,EAAEC,MAAM,KAAK;MAC3BD,KAAK,CAACL,KAAK,GAAGM,MAAM,CAACC,OAAO;IAC9B;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEH,YAAY;EAAEI,gBAAgB;EAAEC,UAAU;EAAEC;AAAS,CAAC,GACnET,WAAW,CAACU,OAAO;AAErB,OAAO,MAAMC,kBAAkB,GAAGA,CAACC,SAAS,EAAEC,QAAQ,KAAK,MAAOC,QAAQ,IAAK;EAC7EA,QAAQ,CAACN,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EAC5B,IAAI;IACF,MAAMO,QAAQ,GAAG,MAAM1B,KAAK,CAAC2B,GAAG,CAAC,GAAGH,QAAQ,aAAa,EAAE;MACzDI,eAAe,EAAE,IAAI;MACrBC,OAAO,EAAE;QACP,cAAc,EAAEN;MAClB;IACF,CAAC,CAAC;IACFE,QAAQ,CAACP,gBAAgB,CAACQ,QAAQ,CAACI,IAAI,CAAC,CAAC;EAC3C,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZC,OAAO,CAACtB,KAAK,CAAC,gCAAgC,EAAEqB,GAAG,CAAC;IACpDN,QAAQ,CAACL,QAAQ,CAACW,GAAG,CAACE,OAAO,CAAC,CAAC;EACjC,CAAC,SAAS;IACRR,QAAQ,CAACN,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;EAC/B;AACF,CAAC;AAED,eAAeR,WAAW,CAACuB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}