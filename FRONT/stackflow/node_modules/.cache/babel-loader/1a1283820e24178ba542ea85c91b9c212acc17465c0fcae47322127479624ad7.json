{"ast":null,"code":"var _jsxFileName = \"/Users/seohyeonseog/Desktop/Seo-Hyunseok/Project/StackFlow-PJT/FRONT/stackflow/src/pages/rt/Rt.js\",\n  _s = $RefreshSig$();\nimport \"./Rt.css\";\nimport axios from \"axios\";\nimport { useState, useEffect } from 'react';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Rt = () => {\n  _s();\n  //  검색 조건 담는 변수\n  const [input, setInput] = useState({\n    date: \"\",\n    check: \"\",\n    select: \"\"\n  });\n\n  // 검색 조건 담는 이벤트 함수\n  const onChangeInput = e => {\n    setInput({\n      ...input,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  // 데이터 가져오는 함수 \n  const [myRtData, myRtSetData] = useState([]); // 데이터를 저장할 상태\n  const [otherRtData, otherRtSetData] = useState([]); // 데이터를 저장할 상태\n  const [storeList, storeListSetData] = useState([]);\n  // const [test, setTest ] = useState([])\n  const csrfToken = \"A823BC7D5B788193A7AD42F31CF1B863\"; // CSRF 토큰\n\n  const fetchData = async (url, setData) => {\n    try {\n      const response = await axios.get(url, {\n        withCredentials: true,\n        maxRedirects: 0,\n        // 리다이렉션 방지\n        headers: {\n          'X-CSRF-TOKEN': csrfToken\n        }\n      });\n      setData(response.data); // 데이터를 상태에 저장\n    } catch (err) {\n      if (err.response && err.response.status === 302) {\n        console.error('리다이렉션 발생:', err.response.headers.location);\n      } else {\n        console.error('Error:', err);\n      }\n    }\n  };\n  useEffect(() => {\n    fetchData('http://localhost:8080/api/rt/meToOtherRtlist', myRtSetData);\n    fetchData('http://localhost:8080/api/rt/OtherToMeRtlist', otherRtSetData);\n    fetchData('http://localhost:8080/api/rt/store', storeListSetData);\n    // fetchData('http://localhost:8080/api/product', setTest);\n  }, []);\n  const filteredData = async () => {\n    try {\n      // 데이터 가져오기\n      const response = await axios.get('http://localhost:8080/api/rt/meToOtherRtlist', {\n        withCredentials: true,\n        maxRedirects: 0,\n        // 리다이렉션 방지\n        headers: {\n          'X-CSRF-TOKEN': csrfToken\n        }\n      });\n      // 데이터 필터링\n      const filtered = input.date || input.check || input.select ? response.data.filter(item => {\n        return (input.date ? item.request_date === input.date : true) && (input.check ? item.rt_status === input.check : true) && (input.select ? item.request_store === input.select : true);\n      }) : response.data; // input 값이 없으면 원래 데이터 반환\n      // 필터링된 데이터 상태 업데이트\n      myRtSetData(filtered);\n    } catch (err) {\n      console.error('Error fetching or filtering data:', err);\n    }\n  };\n\n  // rt_status 매핑 객체 \n  const statusMap = {\n    \"REQUEST\": '미확정',\n    \"APPROVAL\": '확정',\n    \"REFUSE\": '대기'\n  };\n\n  // check 해제 함수\n  const onClickCheck = e => {\n    const checkTag = document.getElementById(`${input.check}`);\n    if (input.check && e.target.value === input.check) {\n      checkTag.checked = false;\n      input.check = '';\n    }\n  };\n  const formatDate = date => {\n    return moment(date).format('YYYY-MM-DD HH:MM');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"rtPage\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uB9E4\\uC7A5 RT \\uAD00\\uB9AC \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainContent\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n_s(Rt, \"VFzjM1O/YSAoswJotNzkgrMAxSU=\");\n_c = Rt;\nexport default Rt;\nvar _c;\n$RefreshReg$(_c, \"Rt\");","map":{"version":3,"names":["axios","useState","useEffect","moment","jsxDEV","_jsxDEV","Rt","_s","input","setInput","date","check","select","onChangeInput","e","target","name","value","myRtData","myRtSetData","otherRtData","otherRtSetData","storeList","storeListSetData","csrfToken","fetchData","url","setData","response","get","withCredentials","maxRedirects","headers","data","err","status","console","error","location","filteredData","filtered","filter","item","request_date","rt_status","request_store","statusMap","onClickCheck","checkTag","document","getElementById","checked","formatDate","format","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/seohyeonseog/Desktop/Seo-Hyunseok/Project/StackFlow-PJT/FRONT/stackflow/src/pages/rt/Rt.js"],"sourcesContent":["import \"./Rt.css\";\nimport axios from \"axios\"\nimport { useState, useEffect } from 'react'\nimport moment from 'moment'\n\nconst Rt = () => {\n\n  //  검색 조건 담는 변수\n  const [input, setInput] = useState({\n    date : \"\",\n    check : \"\",\n    select : \"\"\n  })\n\n  // 검색 조건 담는 이벤트 함수\n  const onChangeInput = (e) => {\n    setInput({\n      ...input,\n      [e.target.name] : e.target.value\n    })\n  }\n\n  // 데이터 가져오는 함수 \n  const [myRtData, myRtSetData] = useState([]) // 데이터를 저장할 상태\n  const [otherRtData, otherRtSetData] = useState([]) // 데이터를 저장할 상태\n  const [storeList, storeListSetData ] = useState([])\n  // const [test, setTest ] = useState([])\n  const csrfToken = \"A823BC7D5B788193A7AD42F31CF1B863\"; // CSRF 토큰\n\n  const fetchData = async (url, setData) => {\n    try {\n      const response = await axios.get(url, {\n        withCredentials: true,\n        maxRedirects: 0, // 리다이렉션 방지\n        headers: {\n          'X-CSRF-TOKEN': csrfToken,\n        },\n      });\n      setData(response.data); // 데이터를 상태에 저장\n    } catch (err) {\n      if (err.response && err.response.status === 302) {\n        console.error('리다이렉션 발생:', err.response.headers.location);\n      } else {\n        console.error('Error:', err);\n      }\n    }\n  };\n\n    useEffect(() => {\n      fetchData('http://localhost:8080/api/rt/meToOtherRtlist', myRtSetData)\n      fetchData('http://localhost:8080/api/rt/OtherToMeRtlist', otherRtSetData);\n      fetchData('http://localhost:8080/api/rt/store', storeListSetData);\n      // fetchData('http://localhost:8080/api/product', setTest);\n    }, []);\n\n    const filteredData = async () => {\n      try {\n        // 데이터 가져오기\n        const response = await axios.get('http://localhost:8080/api/rt/meToOtherRtlist', {\n          withCredentials: true,\n          maxRedirects: 0, // 리다이렉션 방지\n          headers: {\n            'X-CSRF-TOKEN': csrfToken,\n          },\n        });\n        // 데이터 필터링\n        const filtered = input.date  || input.check  || input.select \n        ? response.data.filter((item) => {\n            return (\n              (input.date ? item.request_date === input.date : true) &&\n              (input.check ? item.rt_status === input.check : true) &&\n              (input.select ? item.request_store === input.select : true)\n            );\n          })\n        : response.data; // input 값이 없으면 원래 데이터 반환\n        // 필터링된 데이터 상태 업데이트\n        myRtSetData(filtered);\n      } catch (err) {\n        console.error('Error fetching or filtering data:', err);\n      }\n    };\n\n    // rt_status 매핑 객체 \n    const statusMap = {\n      \"REQUEST\" : '미확정',\n      \"APPROVAL\" : '확정',\n      \"REFUSE\" : '대기',\n    };\n\n    // check 해제 함수\n    const onClickCheck = (e) => {\n      const checkTag = document.getElementById(`${input.check}`);\n      if (input.check && e.target.value === input.check) {\n        checkTag.checked = false\n        input.check = ''\n      } \n    }\n\n    const formatDate = (date) => {\n\n      return moment(date).format('YYYY-MM-DD HH:MM')\n    }\n  \n  return(\n    \n    <div className=\"rtPage\">\n      <h1>매장 RT 관리 </h1>\n      <hr />\n      <div className=\"mainContent\">\n        \n       \n      </div> \n      \n    </div>\n  )\n}\n\nexport default Rt"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}